{"version":3,"sources":["../src/array-reduce-x.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,eAAP,MAA4B,sBAA5B;AACA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,gBAAP,MAA6B,sBAA7B;AAEA,IAAM,MAAM,GAAG,GAAG,MAAlB;AACA,IAAM,UAAU,GAAG,GAAG,WAAtB;AACA,IAAM,YAAY,GAAG,OAAO,MAAP,KAAkB,UAAlB,IAAgC,MAArD,C,CAEA;AACA;AACA;;AACA,IAAI,SAAJ;;AAEA,IAAI,YAAJ,EAAkB;AAChB,EAAA,SAAS,GAAG,OAAO,CAAC,IAAR,CAAa,EAAb,EAAiB,YAAjB,EAA+B,UAAC,GAAD,EAAS;AAAA;;AAClD,WAAO,GAAP;AACD,GAFW,aAET,KAFH;AAIA,MAAI,GAAJ;;AAEA,MAAI,SAAJ,EAAe;AACb,IAAA,GAAG,GAAG,OAAO,CAAC,IAAR,CACJ,UAAU,CAAC,KAAD,CADN,EAEJ,YAFI,EAGJ,UAAC,GAAD,EAAM,CAAN,EAAY;AAAA;;AACV,aAAO,GAAG,GAAG,CAAb;AACD,KALG,aAMJ,GANI,CAAN;AASA,IAAA,SAAS,GAAG,GAAG,CAAC,KAAJ,KAAc,KAAd,IAAuB,GAAG,CAAC,KAAJ,KAAc,MAAjD;AACD;;AAED,MAAI,SAAJ,EAAe;AACb,IAAA,GAAG,GAAG,OAAO,CAAC,IAAR,CACH,SAAS,OAAT,GAAmB;AAClB;AACA,aAAO,SAAP;AACD,KAHD,CAGG,CAHH,EAGM,CAHN,EAGS,CAHT,CADI,EAKJ,YALI,EAMJ,UAAC,GAAD,EAAM,GAAN,EAAc;AAAA;;AACZ,aAAO,GAAG,GAAG,GAAb;AACD,KARG,aASJ,CATI,CAAN;AAYA,IAAA,SAAS,GAAG,GAAG,CAAC,KAAJ,KAAc,KAAd,IAAuB,GAAG,CAAC,KAAJ,KAAc,CAAjD;AACD;;AAED,MAAI,SAAJ,EAAe;AACb,IAAA,GAAG,GAAG,OAAO,CAAC,IAAR,CACJ;AACE,SAAG,CADL;AAEE,SAAG,CAFL;AAGE,SAAG,CAHL;AAIE,SAAG,CAJL;AAKE,MAAA,MAAM,EAAE;AALV,KADI,EAQJ,YARI,EASJ,UAAC,GAAD,EAAM,GAAN,EAAc;AAAA;;AACZ,aAAO,GAAG,GAAG,GAAb;AACD,KAXG,aAYJ,CAZI,CAAN;AAeA,IAAA,SAAS,GAAG,GAAG,CAAC,KAAJ,KAAc,KAAd,IAAuB,GAAG,CAAC,KAAJ,KAAc,CAAjD;AACD;;AAED,MAAI,SAAJ,EAAe;AACb,QAAM,GAAG,GAAG,OAAO,QAAP,KAAoB,WAApB,IAAmC,QAA/C;;AAEA,QAAI,GAAJ,EAAS;AACP,UAAM,QAAQ,GAAG,GAAG,CAAC,sBAAJ,EAAjB;AACA,UAAM,GAAG,GAAG,GAAG,CAAC,aAAJ,CAAkB,KAAlB,CAAZ;AACA,MAAA,QAAQ,CAAC,WAAT,CAAqB,GAArB;AACA,MAAA,GAAG,GAAG,OAAO,CAAC,IAAR,CACJ,QAAQ,CAAC,UADL,EAEJ,YAFI,EAGJ,UAAC,GAAD,EAAM,IAAN,EAAe;AAAA;;AACb,QAAA,GAAG,CAAC,GAAG,CAAC,MAAL,CAAH,GAAkB,IAAlB;AAEA,eAAO,GAAP;AACD,OAPG,aAQJ,EARI,CAAN;AAWA,MAAA,SAAS,GAAG,GAAG,CAAC,KAAJ,KAAc,KAAd,IAAuB,GAAG,CAAC,KAAJ,CAAU,MAAV,KAAqB,CAA5C,IAAiD,GAAG,CAAC,KAAJ,CAAU,CAAV,MAAiB,GAA9E;AACD;AACF;;AAED,MAAI,SAAJ,EAAe;AACb,IAAA,GAAG,GAAG,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,YAAnB,EAAiC,UAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,IAAb,EAAsB;AAAA;;AAC3D,aAAO,IAAP;AACD,KAFK,YAAN;AAIA,IAAA,SAAS,GAAG,GAAG,CAAC,KAAJ,KAAc,KAAd,IAAuB,QAAO,GAAG,CAAC,KAAX,MAAqB,QAAxD;AACD;AACF;AAED;;;;;;;;;;;;;;;;;AAeA,IAAI,OAAJ;;AAEA,IAAI,YAAY,IAAI,SAApB,EAA+B;AAC7B,EAAA,OAAO,GAAG,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AAAS;AAAhC,IAAsD;AAC9D,QAAM,IAAI,GAAG,CAAC,QAAD,CAAb;;AAEA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;AACxB;AACA,MAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,SAAS,CAAC,CAAD,CAAnB;AACD;;AAED,WAAO,YAAY,CAAC,KAAb,CAAmB,KAAnB,EAA0B,IAA1B,CAAP;AACD,GATD;AAUD,CAXD,MAWO;AACL,EAAA,OAAO,GAAG,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AAAS;AAAhC,IAAsD;AAC9D,QAAM,MAAM,GAAG,QAAQ,CAAC,KAAD,CAAvB,CAD8D,CAE9D;;AACA,IAAA,gBAAgB,CAAC,QAAD,CAAhB;AACA,QAAM,QAAQ,GAAG,eAAe,CAAC,MAAD,CAAhC;AACA,QAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAV,CAAvB;AACA,QAAM,UAAU,GAAG,SAAS,CAAC,MAA7B,CAN8D,CAQ9D;;AACA,QAAI,MAAM,KAAK,CAAX,IAAgB,UAAU,GAAG,CAAjC,EAAoC;AAClC,YAAM,IAAI,SAAJ,CAAc,6CAAd,CAAN;AACD;;AAED,QAAI,CAAC,GAAG,CAAR;AACA,QAAI,MAAJ;;AAEA,QAAI,UAAU,GAAG,CAAjB,EAAoB;AAClB;AACA,MAAA,MAAM,GAAG,SAAS,CAAC,CAAD,CAAlB;AACD,KAHD,MAGO;AACL,SAAG;AACD,YAAI,CAAC,IAAI,QAAT,EAAmB;AACjB,UAAA,MAAM,GAAG,QAAQ,CAAC,CAAD,CAAjB;AACA,UAAA,CAAC,IAAI,CAAL;AACA;AACD,SALA,CAOD;;;AACA,QAAA,CAAC,IAAI,CAAL;;AAEA,YAAI,CAAC,IAAI,MAAT,EAAiB;AACf,gBAAM,IAAI,SAAJ,CAAc,6CAAd,CAAN;AACD;AACF,OAbD,QAaS,IAbT;AAagB;;AACjB;;AAED,WAAO,CAAC,GAAG,MAAX,EAAmB;AACjB,UAAI,CAAC,IAAI,QAAT,EAAmB;AACjB,QAAA,MAAM,GAAG,QAAQ,CAAC,MAAD,EAAS,QAAQ,CAAC,CAAD,CAAjB,EAAsB,CAAtB,EAAyB,MAAzB,CAAjB;AACD;;AAED,MAAA,CAAC,IAAI,CAAL;AACD;;AAED,WAAO,MAAP;AACD,GA7CD;AA8CD;;AAED,IAAM,GAAG,GAAG,OAAZ;AAEA,eAAe,GAAf","file":"array-reduce-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport toLength from 'to-length-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\n\nconst natRed = [].reduce;\nconst castObject = {}.constructor;\nconst nativeReduce = typeof natRed === 'function' && natRed;\n\n// ES5 15.4.4.21\n// http://es5.github.com/#x15.4.4.21\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce\nlet isWorking;\n\nif (nativeReduce) {\n  isWorking = attempt.call([], nativeReduce, (acc) => {\n    return acc;\n  }).threw;\n\n  let res;\n\n  if (isWorking) {\n    res = attempt.call(\n      castObject('abc'),\n      nativeReduce,\n      (acc, c) => {\n        return acc + c;\n      },\n      'x',\n    );\n\n    isWorking = res.threw === false && res.value === 'xabc';\n  }\n\n  if (isWorking) {\n    res = attempt.call(\n      (function getArgs() {\n        /* eslint-disable-next-line prefer-rest-params */\n        return arguments;\n      })(1, 2, 3),\n      nativeReduce,\n      (acc, arg) => {\n        return acc + arg;\n      },\n      1,\n    );\n\n    isWorking = res.threw === false && res.value === 7;\n  }\n\n  if (isWorking) {\n    res = attempt.call(\n      {\n        0: 1,\n        1: 2,\n        3: 3,\n        4: 4,\n        length: 4,\n      },\n      nativeReduce,\n      (acc, arg) => {\n        return acc + arg;\n      },\n      2,\n    );\n\n    isWorking = res.threw === false && res.value === 8;\n  }\n\n  if (isWorking) {\n    const doc = typeof document !== 'undefined' && document;\n\n    if (doc) {\n      const fragment = doc.createDocumentFragment();\n      const div = doc.createElement('div');\n      fragment.appendChild(div);\n      res = attempt.call(\n        fragment.childNodes,\n        nativeReduce,\n        (acc, node) => {\n          acc[acc.length] = node;\n\n          return acc;\n        },\n        [],\n      );\n\n      isWorking = res.threw === false && res.value.length === 1 && res.value[0] === div;\n    }\n  }\n\n  if (isWorking) {\n    res = attempt.call('ab', nativeReduce, (_, __, ___, list) => {\n      return list;\n    });\n\n    isWorking = res.threw === false && typeof res.value === 'object';\n  }\n}\n\n/**\n * This method applies a function against an accumulator and each element in the\n * array (from left to right) to reduce it to a single value.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [initialValue] - Value to use as the first argument to the first\n *  call of the callback. If no initial value is supplied, the first element in\n *  the array will be used. Calling reduce on an empty array without an initial\n *  value is an error.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @throws {TypeError} If called on an empty array without an initial value.\n * @returns {*} The value that results from the reduction.\n */\nlet $reduce;\n\nif (nativeReduce && isWorking) {\n  $reduce = function reduce(array, callBack /* , initialValue */) {\n    const args = [callBack];\n\n    if (arguments.length > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      args[1] = arguments[2];\n    }\n\n    return nativeReduce.apply(array, args);\n  };\n} else {\n  $reduce = function reduce(array, callBack /* , initialValue */) {\n    const object = toObject(array);\n    // If no callback function or if callback is not a callable function\n    assertIsFunction(callBack);\n    const iterable = splitIfBoxedBug(object);\n    const length = toLength(iterable.length);\n    const argsLength = arguments.length;\n\n    // no value to return if no initial value and an empty array\n    if (length === 0 && argsLength < 3) {\n      throw new TypeError('reduce of empty array with no initial value');\n    }\n\n    let i = 0;\n    let result;\n\n    if (argsLength > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      result = arguments[2];\n    } else {\n      do {\n        if (i in iterable) {\n          result = iterable[i];\n          i += 1;\n          break;\n        }\n\n        // if array contains no values, no initial value to return\n        i += 1;\n\n        if (i >= length) {\n          throw new TypeError('reduce of empty array with no initial value');\n        }\n      } while (true); /* eslint-disable-line no-constant-condition */\n    }\n\n    while (i < length) {\n      if (i in iterable) {\n        result = callBack(result, iterable[i], i, object);\n      }\n\n      i += 1;\n    }\n\n    return result;\n  };\n}\n\nconst red = $reduce;\n\nexport default red;\n"]}